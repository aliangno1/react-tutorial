{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","this","Component","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","type","onChange","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"yQAEMA,EAAc,WAClB,OACE,+BACE,4BACE,oCACA,mCACA,yCAMFC,EAAY,SAAAC,GAChB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACE,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAKR,OAAO,+BAAQJ,IAgBFU,E,iLAZH,IAAD,EACoCC,KAAKZ,MAAxCE,EADD,EACCA,cAAeQ,EADhB,EACgBA,gBAEvB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,S,GAP9CG,a,OCiBLC,E,YA3Cb,WAAYd,GAAQ,IAAD,8BACjB,4CAAMA,KASRe,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,OAAtBV,EADc,EACdA,KAAMW,EADQ,EACRA,MACd,EAAKC,SAAL,eACGZ,EAAOW,KAbO,EAiBnBE,WAAa,WACX,EAAKpB,MAAMqB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eAhBnB,EAAKA,aAAe,CAClBhB,KAAM,GACNC,IAAK,IAEP,EAAKc,MAAQ,EAAKC,aAPD,E,sEAqBT,IAAD,EACeX,KAAKU,MAAnBf,EADD,EACCA,KAAMC,EADP,EACOA,IACd,OACE,8BACE,uCACA,2BACEgB,KAAK,OACLjB,KAAK,OACLW,MAAOX,EACPkB,SAAUb,KAAKG,eACjB,sCACA,2BACES,KAAK,OACLjB,KAAK,MACLW,MAAOV,EACPiB,SAAUb,KAAKG,eACjB,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASG,KAAKQ,kB,GAtCvCP,aCiCJa,E,2MA5BbJ,MAAQ,CACNK,WAAY,I,EAGdjB,gBAAkB,SAAAL,GAAU,IAClBsB,EAAe,EAAKL,MAApBK,WAER,EAAKR,SAAS,CACZQ,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAMzB,Q,EAKnBgB,aAAe,SAAAQ,GACb,EAAKV,SAAS,CAAEQ,WAAW,GAAD,mBAAM,EAAKL,MAAMK,YAAjB,CAA6BE,O,wEAIvD,OACE,yBAAKE,UAAU,aACb,kBAAC,EAAD,CAAO7B,cAAeU,KAAKU,MAAMK,WAAYjB,gBAAiBE,KAAKF,kBACnE,kBAAC,EAAD,CAAMW,aAAcT,KAAKS,oB,GAvBfR,a,MCAlBmB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ecbb88c4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Job</th>\r\n        <th>Remove</th>\r\n      </tr>\r\n    </thead>\r\n  )\r\n}\r\n\r\nconst TableBody = props => {\r\n  const rows = props.characterData.map((row, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{row.name}</td>\r\n        <td>{row.job}</td>\r\n        <td>\r\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  })\r\n  return <tbody>{rows}</tbody>\r\n}\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    const { characterData, removeCharacter } = this.props\r\n\r\n    return (\r\n      <table>\r\n        <TableHeader />\r\n        <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Table","import React, { Component } from 'react'\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.initialState = {\r\n      name: '',\r\n      job: '',\r\n    }\r\n    this.state = this.initialState\r\n  }\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  submitForm = () => {\r\n    this.props.handleSubmit(this.state)\r\n    this.setState(this.initialState)\r\n  }\r\n  render() {\r\n    const { name, job } = this.state;\r\n    return (\r\n      <form>\r\n        <label>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={this.handleChange} />\r\n        <label>Job</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"job\"\r\n          value={job}\r\n          onChange={this.handleChange} />\r\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form","import React, { Component } from 'react'\r\nimport Table from './Table'\r\nimport Form from './Form'\r\n\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    characters: [],\r\n  }\r\n\r\n  removeCharacter = index => {\r\n    const { characters } = this.state\r\n\r\n    this.setState({\r\n      characters: characters.filter((character, i) => {\r\n        return i !== index\r\n      }),\r\n    })\r\n  }\r\n\r\n  handleSubmit = character => {\r\n    this.setState({ characters: [...this.state.characters, character] })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Table characterData={this.state.characters} removeCharacter={this.removeCharacter} />\r\n        <Form handleSubmit={this.handleSubmit} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n// import App from './Api'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}